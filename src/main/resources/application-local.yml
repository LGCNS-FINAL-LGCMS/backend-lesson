server:
  port: 38107

spring:
  application:
    name: backend-lesson
  datasource:
    url: jdbc:postgresql://localhost:38121/lesson?serverTimezone=UTC&useSSL=true&autoReconnect=true&useUnicode=true&characterEncoding=utf-8
    username: lgcms
    password: 1234
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-test-query: SELECT 1
      validation-timeout: 5000

  jpa:
    hibernate:
      ddl-auto: none
    generate-ddl: true
    show-sql: true
    open-in-view: false

  kafka:
    bootstrap-servers: localhost:38123
    template:
      observation-enabled: true
    listener:
      observation-enabled: true
      ack-mode: manual

    consumer:
      group-id: ${spring.application.name}
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      enable-auto-commit: false
      auto-offset-reset: earliest
      max-poll-records: 10
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.lgcms.lesson.common.kafka.dto.KafkaEvent

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
  cloud:
    openfeign:
      client:
        config:
          RemoteLectureService:
            url: http://localhost:38106
management:
  endpoints:
    web:
      exposure:
        include: prometheus,health,info
  metrics:
    tags:
      application: ${spring.application.name}